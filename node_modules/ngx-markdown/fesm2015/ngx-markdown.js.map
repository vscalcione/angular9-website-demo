{"version":3,"file":"ngx-markdown.js","sources":["ng://ngx-markdown/src/katex-options.ts","ng://ngx-markdown/src/language.pipe.ts","ng://ngx-markdown/src/marked-options.ts","ng://ngx-markdown/src/markdown.service.ts","ng://ngx-markdown/src/prism-plugin.ts","ng://ngx-markdown/src/markdown.component.ts","ng://ngx-markdown/src/markdown.pipe.ts","ng://ngx-markdown/src/markdown.module.ts","ng://ngx-markdown/ngx-markdown.ts"],"sourcesContent":["// tslint:disable: no-redundant-jsdoc\r\nexport class KatexOptions {\r\n    /**\r\n     * If `true`, math will be rendered in display mode\r\n     * (math in display style and center math on page)\r\n     *\r\n     * If `false`, math will be rendered in inline mode\r\n     * @default false\r\n     */\r\n    displayMode?: boolean;\r\n    /**\r\n     * If `true`, KaTeX will throw a `ParseError` when\r\n     * it encounters an unsupported command or invalid LaTex\r\n     *\r\n     * If `false`, KaTeX will render unsupported commands as\r\n     * text, and render invalid LaTeX as its source code with\r\n     * hover text giving the error, in color given by errorColor\r\n     * @default true\r\n     */\r\n    throwOnError?: boolean;\r\n    /**\r\n     * A Color string given in format `#XXX` or `#XXXXXX`\r\n     */\r\n    errorColor?: string;\r\n    /**\r\n     * A collection of custom macros.\r\n     *\r\n     * See `src/macros.js` for its usage\r\n     */\r\n    macros?: any;\r\n    /**\r\n     * If `true`, `\\color` will work like LaTeX's `\\textcolor`\r\n     * and takes 2 arguments\r\n     *\r\n     * If `false`, `\\color` will work like LaTeX's `\\color`\r\n     * and takes 1 argument\r\n     *\r\n     * In both cases, `\\textcolor` works as in LaTeX\r\n     *\r\n     * @default false\r\n     */\r\n    colorIsTextColor?: boolean;\r\n    /**\r\n     * All user-specified sizes will be caped to `maxSize` ems\r\n     *\r\n     * If set to Infinity, users can make elements and space\r\n     * arbitrarily large\r\n     *\r\n     * @default Infinity\r\n     */\r\n    maxSize?: number;\r\n    /**\r\n     * Limit the number of macro expansions to specified number\r\n     *\r\n     * If set to `Infinity`, marco expander will try to fully expand\r\n     * as in LaTex\r\n     *\r\n     * @default 1000\r\n     */\r\n    maxExpand?: number;\r\n    /**\r\n     * Allowed protocols in `\\href`\r\n     *\r\n     * Use `_relative` to allow relative urls\r\n     *\r\n     * Use `*` to allow all protocols\r\n     */\r\n    allowedProtocols?: string[];\r\n    /**\r\n     * If `false` or `\"ignore\"`, allow features that make\r\n     * writing in LaTex convenient but not supported by LaTex\r\n     *\r\n     * If `true` or `\"error\"`, throw an error for such transgressions\r\n     *\r\n     * If `\"warn\"`, warn about behavior via `console.warn`\r\n     *\r\n     * @default \"warn\"\r\n     */\r\n    strict?: boolean | string | Function;\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({\r\n  name: 'language',\r\n})\r\nexport class LanguagePipe implements PipeTransform {\r\n\r\n  transform(value: string, language: string): string {\r\n    if (typeof value !== 'string') {\r\n      console.error(`LanguagePipe has been invoked with an invalid value type [${value}]`);\r\n      return value;\r\n    }\r\n    if (typeof language !== 'string') {\r\n      console.error(`LanguagePipe has been invoked with an invalid parameter [${language}]`);\r\n      return value;\r\n    }\r\n    return '```' + language + '\\n' +  value + '\\n```';\r\n  }\r\n}\r\n","import { MarkedRenderer } from './marked-renderer';\r\n\r\nexport class MarkedOptions {\r\n  /**\r\n   * A prefix URL for any relative link.\r\n   */\r\n  baseUrl?: string;\r\n\r\n  /**\r\n   * Enable GFM line breaks. This option requires the gfm option to be true.\r\n   */\r\n  breaks?: boolean;\r\n\r\n  /**\r\n   * Enable GitHub flavored markdown.\r\n   */\r\n  gfm?: boolean;\r\n\r\n  /**\r\n   * Include an id attribute when emitting headings.\r\n   */\r\n  headerIds?: boolean;\r\n\r\n  /**\r\n   * Set the prefix for header tag ids.\r\n   */\r\n  headerPrefix?: string;\r\n\r\n  /**\r\n   * Set the prefix for code block classes.\r\n   */\r\n  langPrefix?: string;\r\n\r\n  /**\r\n   * Mangle autolinks (<email@domain.com>).\r\n   */\r\n  mangle?: boolean;\r\n\r\n  /**\r\n   * Conform to obscure parts of markdown.pl as much as possible. Don't fix any of the original markdown bugs or poor behavior.\r\n   */\r\n  pedantic?: boolean;\r\n\r\n  /**\r\n   * Type: object Default: new Renderer()\r\n   *\r\n   * An object containing functions to render tokens to HTML.\r\n   */\r\n  renderer?: MarkedRenderer;\r\n\r\n  /**\r\n   * Shows an HTML error message when rendering fails.\r\n   */\r\n  silent?: boolean;\r\n\r\n  /**\r\n   * Use smarter list behavior than the original markdown. May eventually be default with the old behavior moved into pedantic.\r\n   */\r\n  smartLists?: boolean;\r\n\r\n  /**\r\n   * Use \"smart\" typograhic punctuation for things like quotes and dashes.\r\n   */\r\n  smartypants?: boolean;\r\n\r\n  /**\r\n   * Generate closing slash for self-closing tags (<br/> instead of <br>)\r\n   */\r\n  xhtml?: boolean;\r\n\r\n  /**\r\n   * A function to highlight code blocks. The function takes three arguments: code, lang, and callback.\r\n   */\r\n  highlight?(code: string, lang: string, callback?: (error: any | undefined, code: string) => void): string;\r\n}\r\n","import { isPlatformBrowser } from '@angular/common';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Inject, Injectable, InjectionToken, Optional, PLATFORM_ID, SecurityContext } from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport * as marked from 'marked';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\n\r\nimport { KatexOptions } from './katex-options';\r\nimport { MarkedOptions } from './marked-options';\r\nimport { MarkedRenderer } from './marked-renderer';\r\n\r\ndeclare var joypixels: {\r\n  shortnameToUnicode(input: string): string;\r\n};\r\n\r\ndeclare var katex: {\r\n  renderToString(tex: string, options?: KatexOptions): string;\r\n};\r\n\r\ndeclare var Prism: {\r\n  highlightAllUnder: (element: Element | Document) => void;\r\n};\r\n\r\n// tslint:disable:max-line-length\r\nexport const errorJoyPixelsNotLoaded = '[ngx-markdown] When using the `emoji` attribute you *have to* include Emoji-Toolkit files to `angular.json` or use imports. See README for more information';\r\nexport const errorKatexNotLoaded = '[ngx-markdown] When using the `katex` attribute you *have to* include KaTeX files to `angular.json` or use imports. See README for more information';\r\nexport const errorSrcWithoutHttpClient = '[ngx-markdown] When using the `src` attribute you *have to* pass the `HttpClient` as a parameter of the `forRoot` method. See README for more information';\r\n// tslint:enable:max-line-length\r\n\r\nexport const SECURITY_CONTEXT = new InjectionToken<SecurityContext>('SECURITY_CONTEXT');\r\n\r\n@Injectable()\r\nexport class MarkdownService {\r\n\r\n  private readonly initialMarkedOptions: MarkedOptions = {\r\n    renderer: new MarkedRenderer(),\r\n  };\r\n\r\n  private _options: MarkedOptions;\r\n\r\n  get options(): MarkedOptions { return this._options; }\r\n  set options(value: MarkedOptions) {\r\n    this._options = { ...this.initialMarkedOptions, ...value };\r\n  }\r\n\r\n  get renderer(): MarkedRenderer { return this.options.renderer; }\r\n  set renderer(value: MarkedRenderer) {\r\n    this.options.renderer = value;\r\n  }\r\n\r\n  constructor(\r\n    @Inject(PLATFORM_ID) private platform: Object,\r\n    @Inject(SECURITY_CONTEXT) private securityContext: SecurityContext,\r\n    @Optional() private http: HttpClient,\r\n    @Optional() options: MarkedOptions,\r\n    private sanitizer: DomSanitizer,\r\n  ) {\r\n    this.options = options;\r\n  }\r\n\r\n  compile(markdown: string, decodeHtml = false, emojify = false,  markedOptions = this.options): string {\r\n    const trimmed = this.trimIndentation(markdown);\r\n    const decoded = decodeHtml ? this.decodeHtml(trimmed) : trimmed;\r\n    const emojified = emojify ? this.renderEmoji(decoded) : decoded;\r\n    const compiled = marked.parse(emojified, markedOptions);\r\n    return this.sanitizer.sanitize(this.securityContext, compiled);\r\n  }\r\n\r\n  getSource(src: string): Observable<string> {\r\n    if (!this.http) {\r\n      throw new Error(errorSrcWithoutHttpClient);\r\n    }\r\n    return this.http\r\n      .get(src, { responseType: 'text' })\r\n      .pipe(map(markdown => this.handleExtension(src, markdown)));\r\n  }\r\n\r\n  highlight(element?: Element | Document) {\r\n    if (isPlatformBrowser(this.platform) && typeof Prism !== 'undefined') {\r\n      if (!element) {\r\n        element = document;\r\n      }\r\n      const noLanguageElements = element.querySelectorAll('pre code:not([class*=\"language-\"])');\r\n      Array.prototype.forEach.call(noLanguageElements, (x: Element) => x.classList.add('language-none'));\r\n      Prism.highlightAllUnder(element);\r\n    }\r\n  }\r\n\r\n  renderKatex(html: string, options?: KatexOptions): string {\r\n    if (typeof katex === 'undefined' || typeof katex.renderToString === 'undefined') {\r\n      throw new Error(errorKatexNotLoaded);\r\n    }\r\n    return html.replace(/\\$([^\\s][^$]*?[^\\s])\\$/gm, (_, tex) => katex.renderToString(tex, options));\r\n  }\r\n\r\n  private decodeHtml(html: string): string {\r\n    if (isPlatformBrowser(this.platform)) {\r\n      const textarea = document.createElement('textarea');\r\n      textarea.innerHTML = html;\r\n      return textarea.value;\r\n    }\r\n    return html;\r\n  }\r\n\r\n  private handleExtension(src: string, markdown: string): string {\r\n    const extension = src\r\n      ? src.split('?')[0].split('.').splice(-1).join()\r\n      : null;\r\n    return extension !== 'md'\r\n      ? '```' + extension + '\\n' + markdown + '\\n```'\r\n      : markdown;\r\n  }\r\n\r\n  private renderEmoji(html: string) {\r\n    if (typeof joypixels === 'undefined' || typeof joypixels.shortnameToUnicode === 'undefined') {\r\n      throw new Error(errorJoyPixelsNotLoaded);\r\n    }\r\n    return joypixels.shortnameToUnicode(html);\r\n  }\r\n\r\n  private trimIndentation(markdown: string): string {\r\n    if (!markdown) {\r\n      return '';\r\n    }\r\n    let indentStart: number;\r\n    return markdown\r\n      .split('\\n')\r\n      .map(line => {\r\n        let lineIdentStart = indentStart;\r\n        if (line.length > 0) {\r\n          lineIdentStart = isNaN(lineIdentStart)\r\n            ? line.search(/\\S|$/)\r\n            : Math.min(line.search(/\\S|$/), lineIdentStart);\r\n        }\r\n        if (isNaN(indentStart)) {\r\n          indentStart = lineIdentStart;\r\n        }\r\n        return !!lineIdentStart\r\n          ? line.substring(lineIdentStart)\r\n          : line;\r\n      }).join('\\n');\r\n  }\r\n}\r\n","export enum PrismPlugin {\r\n  LineHighlight = 'line-highlight',\r\n  LineNumbers = 'line-numbers',\r\n}\r\n","import { AfterViewInit, Component, ElementRef, EventEmitter, Input, OnChanges, Output } from '@angular/core';\r\n\r\nimport { KatexOptions } from './katex-options';\r\nimport { MarkdownService } from './markdown.service';\r\nimport { PrismPlugin } from './prism-plugin';\r\n\r\n@Component({\r\n  // tslint:disable-next-line:component-selector\r\n  selector: 'markdown, [markdown]',\r\n  template: '<ng-content></ng-content>',\r\n})\r\nexport class MarkdownComponent implements OnChanges, AfterViewInit {\r\n\r\n  protected static ngAcceptInputType_emoji: boolean | '';\r\n  protected static ngAcceptInputType_katex: boolean | '';\r\n  protected static ngAcceptInputType_lineHighlight: boolean | '';\r\n  protected static ngAcceptInputType_lineNumbers: boolean | '';\r\n\r\n  @Input() data: string;\r\n  @Input() src: string;\r\n\r\n  // Plugin - emoji\r\n  @Input()\r\n  get emoji(): boolean { return this._emoji; }\r\n  set emoji(value: boolean) { this._emoji = this.coerceBooleanProperty(value); }\r\n\r\n  // Plugin - katex\r\n  @Input()\r\n  get katex(): boolean { return this._katex; }\r\n  set katex(value: boolean) { this._katex = this.coerceBooleanProperty(value); }\r\n  @Input() katexOptions: KatexOptions;\r\n\r\n  // Plugin - lineHighlight\r\n  @Input()\r\n  get lineHighlight(): boolean { return this._lineHighlight; }\r\n  set lineHighlight(value: boolean) { this._lineHighlight = this.coerceBooleanProperty(value); }\r\n  @Input() line: string | string[];\r\n  @Input() lineOffset: number;\r\n\r\n  // Plugin - lineNumbers\r\n  @Input()\r\n  get lineNumbers(): boolean { return this._lineNumbers; }\r\n  set lineNumbers(value: boolean) { this._lineNumbers = this.coerceBooleanProperty(value); }\r\n  @Input() start: number;\r\n\r\n  // Event emitters\r\n  @Output() error = new EventEmitter<string>();\r\n  @Output() load = new EventEmitter<string>();\r\n  @Output() ready = new EventEmitter<void>();\r\n\r\n  private _emoji = false;\r\n  private _katex = false;\r\n  private _lineHighlight = false;\r\n  private _lineNumbers = false;\r\n\r\n  constructor(\r\n    public element: ElementRef<HTMLElement>,\r\n    public markdownService: MarkdownService,\r\n  ) { }\r\n\r\n  ngOnChanges() {\r\n    if (this.data != null) {\r\n      this.handleData();\r\n      return;\r\n    }\r\n    if (this.src != null) {\r\n      this.handleSrc();\r\n      return;\r\n    }\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    if (!this.data && !this.src) {\r\n      this.handleTransclusion();\r\n    }\r\n  }\r\n\r\n  render(markdown: string, decodeHtml = false) {\r\n    let compiled = this.markdownService.compile(markdown, decodeHtml, this.emoji);\r\n    compiled = this.katex ? this.markdownService.renderKatex(compiled, this.katexOptions) : compiled;\r\n    this.element.nativeElement.innerHTML = compiled;\r\n    this.handlePlugins();\r\n    this.markdownService.highlight(this.element.nativeElement);\r\n    this.ready.emit();\r\n  }\r\n\r\n  private coerceBooleanProperty(value: boolean | ''): boolean {\r\n    return value != null && `${value}` !== 'false';\r\n  }\r\n\r\n  private handleData() {\r\n    this.render(this.data);\r\n  }\r\n\r\n  private handleSrc() {\r\n    this.markdownService\r\n      .getSource(this.src)\r\n      .subscribe(\r\n        markdown => {\r\n          this.render(markdown);\r\n          this.load.emit(markdown);\r\n        },\r\n        error => this.error.emit(error),\r\n      );\r\n  }\r\n\r\n  private handleTransclusion() {\r\n    this.render(this.element.nativeElement.innerHTML, true);\r\n  }\r\n\r\n  private handlePlugins() {\r\n    if (this.lineHighlight) {\r\n      this.setPluginClass(this.element.nativeElement, PrismPlugin.LineHighlight);\r\n      this.setPluginOptions(this.element.nativeElement, { dataLine: this.line, dataLineOffset: this.lineOffset });\r\n    }\r\n    if (this.lineNumbers) {\r\n      this.setPluginClass(this.element.nativeElement, PrismPlugin.LineNumbers);\r\n      this.setPluginOptions(this.element.nativeElement, { dataStart: this.start });\r\n    }\r\n  }\r\n\r\n  private setPluginClass(element: HTMLElement, plugin: string | string[]) {\r\n    const preElements = element.querySelectorAll('pre');\r\n    for (let i = 0; i < preElements.length; i++) {\r\n      const classes = plugin instanceof Array ? plugin : [plugin];\r\n      preElements.item(i).classList.add(...classes);\r\n    }\r\n  }\r\n\r\n  private setPluginOptions(element: HTMLElement, options: object) {\r\n    const preElements = element.querySelectorAll('pre');\r\n    for (let i = 0; i < preElements.length; i++) {\r\n      Object.keys(options).forEach(option => {\r\n        const attributeValue = options[option];\r\n        if (!!attributeValue) {\r\n          const attributeName = this.toLispCase(option);\r\n          preElements.item(i).setAttribute(attributeName, attributeValue.toString());\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  private toLispCase(value: string) {\r\n    const upperChars = value.match(/([A-Z])/g);\r\n    if (!upperChars) {\r\n      return value;\r\n    }\r\n    let str = value.toString();\r\n    for (let i = 0, n = upperChars.length; i < n; i++) {\r\n      str = str.replace(new RegExp(upperChars[i]), '-' + upperChars[i].toLowerCase());\r\n    }\r\n    if (str.slice(0, 1) === '-') {\r\n      str = str.slice(1);\r\n    }\r\n    return str;\r\n  }\r\n}\r\n","import { ElementRef, NgZone, Pipe, PipeTransform } from '@angular/core';\r\nimport { first } from 'rxjs/operators';\r\n\r\nimport { MarkdownService } from './markdown.service';\r\n\r\n@Pipe({\r\n  name: 'markdown',\r\n})\r\nexport class MarkdownPipe implements PipeTransform {\r\n\r\n  constructor(\r\n    private elementRef: ElementRef<HTMLElement>,\r\n    private markdownService: MarkdownService,\r\n    private zone: NgZone,\r\n  ) { }\r\n\r\n  transform(value: string): string {\r\n    if (value == null) {\r\n      return '';\r\n    }\r\n\r\n    if (typeof value !== 'string') {\r\n      console.error(`MarkdownPipe has been invoked with an invalid value type [${value}]`);\r\n      return value;\r\n    }\r\n\r\n    const markdown = this.markdownService.compile(value);\r\n\r\n    this.zone.onStable\r\n      .pipe(first())\r\n      .subscribe(() => this.markdownService.highlight(this.elementRef.nativeElement));\r\n\r\n    return markdown;\r\n  }\r\n}\r\n","import { ModuleWithProviders, NgModule, Provider, SecurityContext } from '@angular/core';\r\n\r\nimport { LanguagePipe } from './language.pipe';\r\nimport { MarkdownComponent } from './markdown.component';\r\nimport { MarkdownPipe } from './markdown.pipe';\r\nimport { MarkdownService, SECURITY_CONTEXT } from './markdown.service';\r\n\r\n// having a dependency on `HttpClientModule` within a library\r\n// breaks all the interceptors from the app consuming the library\r\n// here, we explicitely ask the user to pass a provider with\r\n// their own instance of `HttpClientModule`\r\nexport interface MarkdownModuleConfig {\r\n  loader?: Provider;\r\n  markedOptions?: Provider;\r\n  sanitize?: SecurityContext;\r\n}\r\n\r\nconst sharedDeclarations = [\r\n  LanguagePipe,\r\n  MarkdownComponent,\r\n  MarkdownPipe,\r\n];\r\n\r\n@NgModule({\r\n  exports: sharedDeclarations,\r\n  declarations: sharedDeclarations,\r\n})\r\nexport class MarkdownModule {\r\n  static forRoot(markdownModuleConfig?: MarkdownModuleConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: MarkdownModule,\r\n      providers: [\r\n        MarkdownService,\r\n        markdownModuleConfig && markdownModuleConfig.loader || [],\r\n        markdownModuleConfig && markdownModuleConfig.markedOptions || [],\r\n        {\r\n          provide: SECURITY_CONTEXT,\r\n          useValue: markdownModuleConfig && markdownModuleConfig.sanitize != null\r\n            ? markdownModuleConfig.sanitize\r\n            : SecurityContext.HTML,\r\n        },\r\n      ],\r\n    };\r\n  }\r\n\r\n  static forChild(): ModuleWithProviders {\r\n    return {\r\n      ngModule: MarkdownModule,\r\n    };\r\n  }\r\n}\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["MarkedRenderer","marked.parse"],"mappings":"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"}